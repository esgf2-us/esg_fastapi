[tool.poetry]
name = "esg-fastapi"
version = "0.1.0"
description = ""
authors = ["Nathan Collier <collierno@ornl.gov>", "Zach Price <pricezt@ornl.gov>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.12"
globus-sdk = "^3.56.0"
uvicorn = "^0.34.2"
prometheus-fastapi-instrumentator = "^7.1.0"
gunicorn = "^23.0.0"
opentelemetry-distro = "^0.55b1"
opentelemetry-instrumentation-fastapi = "^0.55b1"
opentelemetry-instrumentation-logging = "^0.55b1"
opentelemetry-exporter-otlp-proto-grpc = "^1.33.0"
opentelemetry-instrumentation-requests = "^0.55b1"
pydantic-loggings = "^1.6.1"
pyroscope-io = "^0.8.11"
pydantic = "^2.11.5"
semver = "^3.0.4"
pyroscope-otel = "^0.4.1"
cachetools = "^6.0.0"


[tool.poetry.group.dev.dependencies]
pytest-bdd = "^8.1.0"
httpx = "^0.28.1"
pytest-mock = "^3.14.1"
pytest-cov = "^6.1.1"
ruff = "^0.11.13"
datamodel-code-generator = "^0.30.1"
pytest-asyncio = "^0.26.0"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "D", "UP", "ANN", "ASYNC", "S", "B", "T20", "PT", "SIM", "TCH", "PTH", "TD", "PL"]
ignore = [
  "ANN102",  # ignore deprecated hints for cls arg in @classmethods
  "TD002",   # don't require author on TODO's
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore `S101` (Use of `assert` detected) in tests.
# Ignore `D100` (Missing docstring in public module) in tests.
"tests/*" = ["S101", "D100"]
"test_*.py" = ["S101"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
bdd_features_base_dir = "features/"
addopts = "--cov --cov-report term-missing:skip-covered --no-cov-on-fail --cov-fail-under=98"
pythonpath = [
  "src"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
