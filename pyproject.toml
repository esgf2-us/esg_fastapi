[project]
name = "esg-fastapi"
version = "1.3.0"
description = ""
readme = "README.md"
authors = [
  { name = "Nathan Collier", email = "collierno@ornl.gov" },
  { name = "Zach Price", email = "pricezt@ornl.gov" },
]

dependencies = [
  "fastapi>=0.115.12",
  "uvicorn>=0.34.2",
  "opentelemetry-distro>=0.55b1",
  "opentelemetry-instrumentation-httpx>=0.55b1",
  "opentelemetry-instrumentation-fastapi>=0.55b1",
  "opentelemetry-instrumentation-logging>=0.55b1",
  "opentelemetry-instrumentation-requests>=0.55b1",
  "opentelemetry-exporter-otlp-proto-grpc>=1.33.0",
  "pydantic-loggings>=1.6.1",
  "pyroscope-io>=0.8.11",
  "pydantic>=2.11.7",
  "pyroscope-otel>=0.4.1",
  "hishel>=0.1.2",
  "prometheus-client>=0.22.1",
]
requires-python = ">=3.11"


[tool.poetry.group.dev.dependencies]
pytest-bdd = "^8.1.0"
httpx = "^0.28.1"
pytest-mock = "^3.14.1"
pytest-cov = "^6.1.1"
ruff = "^0.12.7"
datamodel-code-generator = { extras = ["http"], version = "^0.31.2" }
pytest-asyncio = "^1.1.0"
respx = "^0.22.0"
fastapi = { extras = ["standard"], version = "^0.116.1" }

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]

ignore = [
  "ANN102", # ignore deprecated hints for cls arg in @classmethods
  "TD002",  # don't require author on TODO's
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
# Ignore `S101` (Use of `assert` detected) in tests.
# Ignore `D100` (Missing docstring in public module) in tests.
# Ignore `FBT001` (Boolean-typed positional argument in function definition) in tests.
"tests/*" = ["S101", "D100"]
"test_*.py" = ["S101", "FBT001"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
bdd_features_base_dir = "features/"
addopts = "--cov --cov-report term-missing:skip-covered --no-cov-on-fail --cov-fail-under=100"
pythonpath = ["src"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
